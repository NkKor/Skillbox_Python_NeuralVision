Category,Termin,Description,Purpose,TensorFlow,PyTorch,Link
Architecture,Input,Определяет входной тензор,Задаёт форму входных данных,Input(shape=(H, W, C)),in_features,https://www.tensorflow.org/api_docs/python/tf/keras/Input ,https://pytorch.org/docs/stable/generated/torch.nn.Linear.html #torch.nn.Linear
Architecture,Dense / Linear,Полносвязный слой,Обрабатывает плоские данные,layers.Dense(128),nn.Linear(784, 128),https://www.tensorflow.org/api_docs/python/tf/keras/layers/Dense ,https://pytorch.org/docs/stable/generated/torch.nn.Linear.html 
CNN,Conv2D,Сверточный слой,Извлекает пространственные признаки,layers.Conv2D(32, (3, 3), padding='same'),nn.Conv2d(3, 32, 3, padding=1),https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv2D ,https://pytorch.org/docs/stable/generated/torch.nn.Conv2d.html 
CNN,BatchNormalization,Нормализует выходы слоя,Стабилизирует обучение,layers.BatchNormalization(),nn.BatchNorm2d(32),https://www.tensorflow.org/api_docs/python/tf/keras/layers/BatchNormalization ,https://pytorch.org/docs/stable/generated/torch.nn.BatchNorm2d.html 
CNN,MaxPooling2D,Уменьшает размерность,Снижает объём вычислений,layers.MaxPooling2D((2, 2)),nn.MaxPool2d(2),https://www.tensorflow.org/api_docs/python/tf/keras/layers/MaxPooling2D ,https://pytorch.org/docs/stable/generated/torch.nn.MaxPool2d.html 
CNN,AveragePooling2D,Усреднение по карте признаков,Мягкая абстракция признаков,layers.AveragePooling2D((2, 2)),nn.AvgPool2d(2),https://www.tensorflow.org/api_docs/python/tf/keras/layers/AveragePooling2D ,https://pytorch.org/docs/stable/generated/torch.nn.AvgPool2d.html 
CNN,Dropout,Отключение случайных нейронов,Борьба с переобучением,layers.Dropout(0.5),nn.Dropout(p=0.5),https://www.tensorflow.org/api_docs/python/tf/keras/layers/Dropout ,https://pytorch.org/docs/stable/generated/torch.nn.Dropout.html 
CNN,Flatten,Превращает тензор в плоский вид,Подготовка к полносвязным слоям,layers.Flatten(),torch.flatten(x, start_dim=1),https://www.tensorflow.org/api_docs/python/tf/keras/layers/Flatten ,https://pytorch.org/docs/stable/generated/torch.flatten.html 
CNN,GlobalAveragePooling2D,Усреднение карт признаков,Упрощение перехода к классификатору,layers.GlobalAveragePooling2D(),nn.AdaptiveAvgPool2d((1, 1)),https://www.tensorflow.org/api_docs/python/tf/keras/layers/GlobalAveragePooling2D ,https://pytorch.org/docs/stable/generated/torch.nn.AdaptiveAvgPool2d.html 
RNN,LSTM,Рекуррентный слой с памятью,Обработка последовательностей,layers.LSTM(64),nn.LSTM(input_size, hidden_size),https://www.tensorflow.org/api_docs/python/tf/keras/layers/LSTM ,https://pytorch.org/docs/stable/generated/torch.nn.LSTM.html 
RNN,GRU,Упрощённая версия LSTM,Тоже обрабатывает последовательности,layers.GRU(64),nn.GRU(...),https://www.tensorflow.org/api_docs/python/tf/keras/layers/GRU ,https://pytorch.org/docs/stable/generated/torch.nn.GRU.html 
Transformer,Vision Transformer,Перевод изображения в последовательность,Современный подход к CV,Custom,Custom,https://github.com/google-research/vision_transformer ,https://github.com/lucidrains/vit-pytorch 
Transformer,Self-Attention,Механизм внимания внутри последовательности,Фокусировка на важных частях,tf.keras.layers.MultiHeadAttention,nn.MultiheadAttention,https://www.tensorflow.org/api_docs/python/tf/keras/layers/MultiHeadAttention ,https://pytorch.org/docs/stable/generated/torch.nn.MultiheadAttention.html 
GAN,Generator,Генерирует новые данные,Создание фейковых изображений,Sequential([...]),nn.Sequential([...]),https://www.tensorflow.org/guide/keras/train_and_evaluate #training_3
GAN,Discriminator,Оценивает реальность данных,Оценка качества генерации,Sequential([...]),nn.Sequential([...]),https://www.tensorflow.org/guide/keras/train_and_evaluate #training_3
GAN,Noise Vector,Случайный вход для генератора,Источник "случайности",np.random.normal(...),torch.randn(...),https://numpy.org/doc/stable/reference/random/generated/numpy.random.normal.html ,https://pytorch.org/docs/stable/generated/torch.randn.html 
Training,Adam Optimizer,Алгоритм оптимизации весов,Автоматическое обновление весов,optimizers.Adam(learning_rate=0.001),optim.Adam(model.parameters(), lr=0.001),https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/Adam ,https://pytorch.org/docs/stable/generated/torch.optim.Adam.html 
Training,Categorical Crossentropy,Функция потерь для классификации,Минимизация ошибки,model.compile(loss='categorical_crossentropy'),nn.CrossEntropyLoss(),https://www.tensorflow.org/api_docs/python/tf/keras/losses/CategoricalCrossentropy ,https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html 
Training,Binary Crossentropy,Потери для бинарной классификации,Классификация на два класса,model.compile(loss='binary_crossentropy'),nn.BCELoss(),https://www.tensorflow.org/api_docs/python/tf/keras/losses/BinaryCrossentropy ,https://pytorch.org/docs/stable/generated/torch.nn.BCELoss.html 
Training,MSE Loss,Среднеквадратичная ошибка,Для регрессии и LSGAN,model.compile(loss='mse'),nn.MSELoss(),https://www.tensorflow.org/api_docs/python/tf/keras/losses/MeanSquaredError ,https://pytorch.org/docs/stable/generated/torch.nn.MSELoss.html 
Callbacks,ModelCheckpoint,Сохраняет лучшую модель,Сохранение прогресса,callbacks.ModelCheckpoint('best_model.h5'),torch.save(model.state_dict(), 'model.pth'),https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/ModelCheckpoint ,https://pytorch.org/tutorials/beginner/saving_loading_models.html 
Callbacks,EarlyStopping,Остановка при отсутствии прогресса,Борьба с переобучением,callbacks.EarlyStopping(patience=3),Вручную через val_loss,https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/EarlyStopping ,https://pytorch.org/ignite/generated/ignite.handlers.EarlyStopping.html 
Metrics,Accuracy,Процент правильных предсказаний,Оценка точности,model.compile(metrics=['accuracy']),accuracy = torch.eq(preds, labels).float().mean(),https://www.tensorflow.org/api_docs/python/tf/keras/metrics/Accuracy ,https://torchmetrics.readthedocs.io/en/latest/ 
Data,ImageDataGenerator,Генератор данных с аугментацией,Увеличивает разнообразие данных,ImageDataGenerator(rotation_range=10),transforms.RandomRotation(10),https://www.tensorflow.org/api_docs/python/tf/keras/preprocessing/image/ImageDataGenerator ,https://pytorch.org/vision/stable/transforms.html 
Data,Normalize,Нормализует данные,Стандартизация пикселей,Rescaling(1./255),Normalize(mean=[0.485], std=[0.229]),https://www.tensorflow.org/api_docs/python/tf/keras/layers/Rescaling ,https://pytorch.org/vision/stable/transforms.html #torchvision.transforms.Normalize